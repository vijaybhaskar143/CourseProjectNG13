{"ast":null,"code":"import _classCallCheck from \"C:\\\\ABC\\\\Angular13\\\\CourseProject\\\\CourseProject-Ol\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\ABC\\\\Angular13\\\\CourseProject\\\\CourseProject-Ol\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { RecipeService } from '../recipes/recipe.service';\nimport { AuthService } from '../auth/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../recipes/recipe.service\";\nimport * as i3 from \"../auth/auth.service\";\nexport var DataStorageService = /*#__PURE__*/function () {\n  function DataStorageService(http, recipeService, authService) {\n    _classCallCheck(this, DataStorageService);\n\n    this.http = http;\n    this.recipeService = recipeService;\n    this.authService = authService;\n  }\n\n  _createClass(DataStorageService, [{\n    key: \"storeRecipes\",\n    value: function storeRecipes() {\n      var recipes = this.recipeService.getRecipes();\n      this.http.put('https://ng-course-recipe-book-65f10.firebaseio.com/recipes.json', recipes).subscribe(function (response) {\n        console.log(response);\n      });\n    }\n  }, {\n    key: \"fetchRecipes\",\n    value: function fetchRecipes() {\n      var _this = this;\n\n      return this.http.get('https://ng-course-recipe-book-65f10.firebaseio.com/recipes.json').pipe(map(function (recipes) {\n        return recipes.map(function (recipe) {\n          return Object.assign(Object.assign({}, recipe), {\n            ingredients: recipe.ingredients ? recipe.ingredients : []\n          });\n        });\n      }), tap(function (recipes) {\n        _this.recipeService.setRecipes(recipes);\n      }));\n    }\n  }]);\n\n  return DataStorageService;\n}();\n\nDataStorageService.ɵfac = function DataStorageService_Factory(t) {\n  return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService), i0.ɵɵinject(i3.AuthService));\n};\n\nDataStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataStorageService,\n  factory: DataStorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/ABC/Angular13/CourseProject/CourseProject-Ol/src/app/shared/data-storage.service.ts"],"names":["HttpClient","map","tap","RecipeService","AuthService","i0","i1","i2","i3","DataStorageService","http","recipeService","authService","recipes","getRecipes","put","subscribe","response","console","log","get","pipe","recipe","Object","assign","ingredients","setRecipes","ɵfac","DataStorageService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,kBAAb;AACI,8BAAYC,IAAZ,EAAkBC,aAAlB,EAAiCC,WAAjC,EAA8C;AAAA;;AAC1C,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AALL;AAAA;AAAA,WAMI,wBAAe;AACX,UAAMC,OAAO,GAAG,KAAKF,aAAL,CAAmBG,UAAnB,EAAhB;AACA,WAAKJ,IAAL,CACKK,GADL,CACS,iEADT,EAC4EF,OAD5E,EAEKG,SAFL,CAEe,UAAAC,QAAQ,EAAI;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OAJD;AAKH;AAbL;AAAA;AAAA,WAcI,wBAAe;AAAA;;AACX,aAAO,KAAKP,IAAL,CACFU,GADE,CACE,iEADF,EAEFC,IAFE,CAEGpB,GAAG,CAAC,UAAAY,OAAO,EAAI;AACrB,eAAOA,OAAO,CAACZ,GAAR,CAAY,UAAAqB,MAAM,EAAI;AACzB,iBAAOC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,MAAlB,CAAd,EAAyC;AAAEG,YAAAA,WAAW,EAAEH,MAAM,CAACG,WAAP,GAAqBH,MAAM,CAACG,WAA5B,GAA0C;AAAzD,WAAzC,CAAP;AACH,SAFM,CAAP;AAGH,OAJY,CAFN,EAMHvB,GAAG,CAAC,UAAAW,OAAO,EAAI;AACf,QAAA,KAAI,CAACF,aAAL,CAAmBe,UAAnB,CAA8Bb,OAA9B;AACH,OAFM,CANA,CAAP;AASH;AAxBL;;AAAA;AAAA;;AA0BAJ,kBAAkB,CAACkB,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,kBAAV,EAA8BJ,EAAE,CAACyB,QAAH,CAAYxB,EAAE,CAACN,UAAf,CAA9B,EAA0DK,EAAE,CAACyB,QAAH,CAAYvB,EAAE,CAACJ,aAAf,CAA1D,EAAyFE,EAAE,CAACyB,QAAH,CAAYtB,EAAE,CAACJ,WAAf,CAAzF,CAAP;AAA+H,CAAlM;;AACAK,kBAAkB,CAACsB,KAAnB,GAA2B,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,kBAAT;AAA6ByB,EAAAA,OAAO,EAAEzB,kBAAkB,CAACkB,IAAzD;AAA+DQ,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { RecipeService } from '../recipes/recipe.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"../recipes/recipe.service\";\r\nimport * as i3 from \"../auth/auth.service\";\r\nexport class DataStorageService {\r\n    constructor(http, recipeService, authService) {\r\n        this.http = http;\r\n        this.recipeService = recipeService;\r\n        this.authService = authService;\r\n    }\r\n    storeRecipes() {\r\n        const recipes = this.recipeService.getRecipes();\r\n        this.http\r\n            .put('https://ng-course-recipe-book-65f10.firebaseio.com/recipes.json', recipes)\r\n            .subscribe(response => {\r\n            console.log(response);\r\n        });\r\n    }\r\n    fetchRecipes() {\r\n        return this.http\r\n            .get('https://ng-course-recipe-book-65f10.firebaseio.com/recipes.json')\r\n            .pipe(map(recipes => {\r\n            return recipes.map(recipe => {\r\n                return Object.assign(Object.assign({}, recipe), { ingredients: recipe.ingredients ? recipe.ingredients : [] });\r\n            });\r\n        }), tap(recipes => {\r\n            this.recipeService.setRecipes(recipes);\r\n        }));\r\n    }\r\n}\r\nDataStorageService.ɵfac = function DataStorageService_Factory(t) { return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService), i0.ɵɵinject(i3.AuthService)); };\r\nDataStorageService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DataStorageService, factory: DataStorageService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}